# Generated by Django 5.0.7 on 2024-08-24 14:55

import django.contrib.auth.models
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=40, null=True)),
                ("last_name", models.CharField(max_length=40, null=True)),
                ("client_id", models.CharField(max_length=40, null=True)),
                ("client_secret", models.CharField(max_length=40, null=True)),
                ("phone_number", models.CharField(max_length=40, null=True)),
                ("username", models.CharField(max_length=100, unique=True)),
                ("email", models.EmailField(max_length=30)),
                ("password", models.CharField(max_length=255)),
                (
                    "user_type",
                    models.CharField(
                        choices=[("USER", "User"), ("APP", "App")],
                        default="USER",
                        max_length=10,
                    ),
                ),
                ("parent_organization", models.CharField(max_length=100)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("EXPERT", "Expert"),
                            ("OBSERVER", "Observer"),
                            ("STAFF", "Staff"),
                            ("ADMIN", "Admin"),
                            ("DEV", "Dev"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("pending_update_json", models.JSONField(null=True)),
                ("is_active", models.BooleanField(default=False)),
                ("updated_by", models.CharField(max_length=30, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "users",
                "db_table": "users",
                "ordering": ["-created_at"],
                "unique_together": {("email", "user_type")},
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
