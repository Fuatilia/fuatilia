name: branch-push
run-name: Run initated by ${{ github.actor }}
on:
  push:
    branches:
      - main
      - sandbox
      - uat
      - dev
      - django_backend
jobs:
  # PR-checker:
  #   runs-on: ubuntu-latest
  #   env:
  #       ENVIRONMENT: test
  #       SECRET_KEY: secret_key
  #       CELERY_BROKER_URL: redis://127.0.0.1:6379/0
  #       CELERY_RESULT_BACKEND: redis://127.0.0.1:6379/0
  #       CELERY_ALWAYS_EAGER: True
  #       CLIENT_ID_SECRET_SALT: ${{ secrets.CLIENT_ID_SECRET_SALT }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       # [ubuntu-latest, macos-latest, windows-latest]
  #       python-version: ["3.12"]

  #   services:
  #     # Label used to access the service container
  #     postgres:
  #       # Docker Hub image
  #       image: postgres:17
  #       # Provide the password for postgres
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_DB: sample_db
  #       ports:
  #         - "5432:5432"
  #       # Set health checks to wait until postgres has started
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup python
  #       uses: actions/setup-python@v5
  #     - name: Check lint with Ruff
  #       run: |
  #         pip install ruff
  #         ruff check .
  #     - name: Test with logs
  #       run: |
  #         mkdir logs
  #         echo "Logs from building" > logs/test.log
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #     - name: Run tests
  #       run: |
  #         pip install pytest pytest-cov
  #       # pytest app -s --log-disable=app_logger --junitxml=junit/test-results.xml
  #       # --doctest-modules --cov=com --cov-report=xml --cov-report=html
  #       env:
  #         DJANGO_SETTINGS_MODULE: ${{ vars.DJANGO_SETTINGS_MODULE }}
  #         JWT_ALGORITHM: ${{ vars.JWT_ALGORITHM }}
  #         HASH_SECRET_STR: ${{ secrets.HASH_SECRET_STR }}
  #         ACCESS_TOKEN_EXPIRE_MINUTES: ${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
  #         INFO_EMAIL: ${{ vars.INFO_EMAIL }}
  #         GCP_INFO_EMAIL_APP_PASSCODE: ${{ secrets.GCP_INFO_EMAIL_APP_PASSCODE }}

  Build-Image:
    runs-on: ubuntu-latest
    steps:
      - name: Build Docker Image
        run: docker build -t  ${{secrets.DOCKERHUB_USERNAME}}/test .
