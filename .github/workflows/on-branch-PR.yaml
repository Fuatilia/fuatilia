name: Trigger PR Checks

on:
  pull_request:
    branches: [main, sandbox, uat, dev]

jobs:
  trigger-pr-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger infra repo checks
        uses: actions/github-script@v6
        env:
          INFRA_REPO: "ci-cd"  # Confirm this matches exactly
          INFRA_OWNER: "Fuatilia"  # Case-sensitive
        with:
          github-token: ${{ secrets.GH_APP_INSTALLATION_TOKEN }}  # Critical change
          script: |
            try {
              await github.rest.repos.createDispatchEvent({
                owner: process.env.INFRA_OWNER,
                repo: process.env.INFRA_REPO,
                event_type: 'pr-check-trigger',
                client_payload: {
                  ref: context.payload.pull_request.head.ref
                }
              })
              console.log('Dispatch event successfully triggered')
            } catch (error) {
              console.error('Dispatch failed:', error)
              // Add debugging info
              console.log('Target repo:', process.env.INFRA_OWNER + '/' + process.env.INFRA_REPO)
              console.log('PR ref:', context.payload.pull_request.head.ref)
              core.setFailed('Failed to trigger checks')
            }
# name: branch-push
# run-name: Run initated by ${{ github.actor }}
# on:
#   pull_request:
#     branches:
#       - main
#       - sandbox
#       - uat
#       - dev
# jobs:
#   PR-checker:
#     runs-on: ubuntu-latest
#     env:
#         ENVIRONMENT: dev
#         SECRET_KEY: secret_key
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
#         python-version: ["3.12"]

#     steps:
#       - uses: actions/checkout@v4
#       - name: Setup python
#         uses: actions/setup-python@v5
#       - name: Check lint with Ruff
#         run: |
#           pip install ruff
#           ruff check .
#       - name: Test with logs
#         run: |
#           mkdir logs
#           echo "Logs from building" > logs/test.log
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip setuptools wheel
#           pip install -r requirements.txt
#       - name: Run tests
#         run: |
#           pip install pytest pytest-cov
#         #  pytest app --log-disable=app_logger --junitxml=junit/test-results.xml
#         # --doctest-modules --cov=com --cov-report=xml --cov-report=html
#         env:
#           DJANGO_SETTINGS_MODULE: ${{ vars.DJANGO_SETTINGS_MODULE }}
#           JWT_ALGORITHM: ${{ vars.JWT_ALGORITHM }}
#           HASH_SECRET_STR: ${{ secrets.HASH_SECRET_STR }}
#           ACCESS_TOKEN_EXPIRE_MINUTES: ${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
#           INFO_EMAIL: ${{ vars.INFO_EMAIL }}
#           GCP_INFO_EMAIL_APP_PASSCODE: ${{ secrets.GCP_INFO_EMAIL_APP_PASSCODE }}
