name: branch-push
run-name: Run initated by ${{ github.actor }}
on:
  pull_request:
    branches:
      - main
      - sandbox
      - uat
      - dev
jobs:
  PR-checker:
    runs-on: ubuntu-latest
    env:
        ENVIRONMENT: dev
        SECRET_KEY: secret_key
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_pytest_db
        ports:
          - "5432:5432"

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
      - name: Check lint with Ruff
        run: |
          pip install ruff
          ruff check .
      - name: Test with logs
        run: |
          mkdir logs
          echo "Logs from building" > logs/test.log
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          steps:
      - name: Set up environment variables
        run: |
          echo "DB_NAME=test_pytest_db" >> $GITHUB_ENV
          echo "DB_USER=postgres" >> $GITHUB_ENV
          echo "DB_PASSWORD=password" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
      - name: Run migrations
        run: python app/manage.py migrate
      - name: Run tests
        run: |
          pip install pytest pytest-cov
          pytest app --log-disable=app_logger --junitxml=junit/test-results.xml
        # --doctest-modules --cov=com --cov-report=xml --cov-report=html
        env:
          DJANGO_SETTINGS_MODULE: ${{ vars.DJANGO_SETTINGS_MODULE }}
          JWT_ALGORITHM: ${{ vars.JWT_ALGORITHM }}
          HASH_SECRET_STR: ${{ secrets.HASH_SECRET_STR }}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
          INFO_EMAIL: ${{ vars.INFO_EMAIL }}
          GCP_INFO_EMAIL_APP_PASSCODE: ${{ secrets.GCP_INFO_EMAIL_APP_PASSCODE }}
