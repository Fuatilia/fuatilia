name: PR-merge
run-name: Run initated by ${{ github.actor }}
on:
  pull_request:
    types:
      - closed
    branches:
      - main
      - uat
      - dev
jobs:
  Build-Api-Image:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker Image on PR
        run: docker build -t ${{secrets.DOCKERHUB_USERNAME}}/${{ github.base_ref }}-fuatilia-api .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'docker.io/${{secrets.DOCKERHUB_USERNAME}}/${{ github.base_ref }}-fuatilia-api'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM'
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker Image
        run: docker push ${{secrets.DOCKERHUB_USERNAME}}/${{ github.base_ref }}-fuatilia-api

  Deploy:
    needs: Build-Api-Image
    runs-on: ubuntu-latest
    steps:
      - name: Main
        if: github.base_ref == 'main'
        run: echo "TARGET_BRANCH=MAIN" >> $GITHUB_ENV
      - name: UAT
        if: github.base_ref == 'uat'
        run: echo "TARGET_BRANCH=UAT" >> $GITHUB_ENV
      - name: Dev
        if: github.base_ref == 'dev'
        run: echo "TARGET_BRANCH=DEV" >> $GITHUB_ENV
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets[format('{0}_EC2_PRIVATE_KEY', env.TARGET_BRANCH)] }}
          HOST: ${{ secrets[format('{0}_EC2_HOST', env.TARGET_BRANCH )] }}
          USER: ${{ vars[format('{0}_EC2_USER', env.TARGET_BRANCH )] }}
        run: |
          echo "$PRIVATE_KEY" > github-ec2.pem && chmod 600 github-ec2.pem
          ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '

          echo "Current directory: $(pwd)"

          echo "Copying env vars"
          sudo rm -f .env && echo "${{ secrets[format('{0}_ENV_VARS', env.TARGET_BRANCH )] }}" >> .env
          echo "Env vars replicated on EC2"

          echo "Pulling Image"
          sudo docker pull ${{secrets.DOCKERHUB_USERNAME}}/${{ github.base_ref }}-fuatilia-api
          echo "Image Pulled"

          echo "Removing previous container"
          sudo docker rm -f ${{ github.base_ref }}-fuatilia-api

          echo "Initiating api service"
          sudo docker run -d -p 8000:8000 --name ${{ github.base_ref }}-fuatilia-api --env-file .env ${{secrets.DOCKERHUB_USERNAME}}/${{ github.base_ref }}-fuatilia-api
          '
